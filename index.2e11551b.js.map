{"mappings":"YACA,IAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,gBAAiBF,SAASC,cAAc,YACxCE,YAAaH,SAASC,cAAc,eAoCtCH,EAAKC,WAAWK,iBAAiB,UAEjC,SAAkBC,GAChBA,EAAEC,kBAqCUC,EAAW,0BACXC,EAAU,qCACVC,EAAS,IAAIC,gBAAgB,CAC/BC,SAAU,EACVC,KAAM,IAGJC,EAAM,GAAoBC,OAAjBP,EAAS,UAEVO,OAFkBN,EAAQ,yFAEnBM,OAAPL,GAEPM,MAAMF,GACRG,MACG,SAACC,GACG,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAG7B,OAAOH,EAASI,M,KAlD/BL,MAAK,SAAAM,GAwDV,IAAqBC,EACXC,EAxDJC,QAAQC,IAAIJ,EAAKK,MAuDFJ,EAtDHD,EAAKK,KAuDbH,EAASD,EACdK,KACG,SAAAC,GACI,MAAM,+CAC6Bf,OAA3Be,EAAKC,aAAa,WAGdhB,OAHuBe,EAAKE,KAAK,yGAMjCjB,OAHAe,EAAKG,MAAM,6EAMRlB,OAHHe,EAAKI,MAAM,gFAMPnB,OAHDe,EAAKK,SAAS,iFAGEpB,OAAfe,EAAKM,UAAU,uD,IAKtCC,KAAK,IAENtC,EAAKI,gBAAgBmC,mBAAmB,YAAab,E,IArEpDc,OAAM,SAAAC,G,OAASd,QAAQC,IAAIa,E,IAmB/B,IAEahC,EACAC,EACAC,EAKAI,C","sources":["src/index.js"],"sourcesContent":["\nconst refs = {\n  searchForm: document.querySelector('.search-form'),\n  photosContainer: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n};\n\n\n// const fetchPostsBtn = document.querySelector(\".btn\");\n// const postList = document.querySelector(\".posts\");\n// const alertPopup = document.querySelector(\".alert\");\n// let isAlertVisible = false;\n\n// // Controls the group number\n// let page = 1;\n// // Controls the number of items in the group\n// let limit = 5;\n// // In our case total number of pages is calculated on frontend\n// const totalPages = 100 / limit;\n\n// fetchPostsBtn.addEventListener(\"click\", () => {\n//   // Check the end of the collection to display an alert\n//   if (page > totalPages) {\n//     return toggleAlertPopup();\n//   }\n\n//   fetchPosts()\n//     .then((posts) => {\n//       renderPosts(posts);\n//       // Increase the group number\n//       page += 1;\n\n//       // Replace button text after first request\n//       if (page > 1) {\n//         fetchPostsBtn.textContent = \"Fetch more posts\";\n//       }\n//     })\n//     .catch((error) => console.log(error));\n// });\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nfunction onSearch(e) {\n  e.preventDefault();\n\n  // console.log(fetchPhotos());\n\n  fetchPhotos()\n    .then(data => {\n      console.log(data.hits);\n      renderPosts(data.hits);\n      //   // Increase the group number\n      //   page += 1;\n\n      //   // Replace button text after first request\n      //   if (page > 1) {\n      //     fetchPostsBtn.textContent = \"Fetch more posts\";\n      //   }\n    })\n    .catch(error => console.log(error));\n}\n\n// function fetchPosts() {\n//   const params = new URLSearchParams({\n//     _limit: limit,\n//     _page: page\n//   });\n\n//   return fetch(`https://jsonplaceholder.typicode.com/posts?${params}`).then(\n//     (response) => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     }\n//   );\n// }\n\n function fetchPhotos() {\n    \n        const BASE_URL = 'https://pixabay.com/api';\n        const API_KEY = '39342201-f813eddd1adb93dcbf05db88a';\n        const params = new URLSearchParams({\n            per_page: 3,\n            page: 1\n        });\n        \n        const url = `${BASE_URL}/?key=${API_KEY}&\n    q=yellow+flower&image_type=photo&orientation=horizontal&\n    safesearch=true&${params}`;\n\n        return fetch(url)\n            .then(\n                (response) => {\n                    if (!response.ok) {\n                        throw new Error(response.status);\n                    }\n                   \n                    return response.json();\n                    \n                });\n    }\n\n\nfunction renderPosts(arr) { \n    const markup = arr\n    .map(\n        item => {\n            return`<div class=\"photo-card\">\n        <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" loading=\"lazy\" />\n       <div class=\"info\">\n        <p class=\"info-item\">\n            <b>Likes: ${item.likes}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Views: ${item.views}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Comments: ${item.comments}</b>\n        </p>\n        <p class=\"info-item\">\n            <b>Downloads: ${item.downloads}</b>\n        </p>\n        </div>\n          </div>`\n        })\n    .join('');     \n    \n    refs.photosContainer.insertAdjacentHTML(\"beforeend\", markup);     \n}\n\n// function renderPosts(posts) {\n//   const markup = posts\n//     .map(({ id, title, body, userId }) => {\n//       return `<li>\n//           <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n//           <p><b>Post id</b>: ${id}</p>\n//           <p><b>Author id</b>: ${userId}</p>\n//           <p class=\"post-body\">${body}</p>\n//         </li>`;\n//     })\n//     .join(\"\");\n//   postList.insertAdjacentHTML(\"beforeend\", markup);\n// }\n\n\n// function toggleAlertPopup() {\n//   if (isAlertVisible) {\n//     return;\n//   }\n//   isAlertVisible = true;\n//   alertPopup.classList.add(\"is-visible\");\n//   setTimeout(() => {\n//     alertPopup.classList.remove(\"is-visible\");\n//     isAlertVisible = false;\n//   }, 3000);\n// }\n"],"names":["$b8f9b7833fa37166$var$refs","searchForm","document","querySelector","photosContainer","loadMoreBtn","addEventListener","e","preventDefault","BASE_URL","API_KEY","params","URLSearchParams","per_page","page","url","concat","fetch","then","response","ok","Error","status","json","data","arr","markup","console","log","hits","map","item","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","catch","error"],"version":3,"file":"index.2e11551b.js.map"}